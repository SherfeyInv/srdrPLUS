.table-scroll.clean-table

  table#question.hover

    thead
      tr
        = f.simple_fields_for(:question_rows, @question.question_rows.first) do |qr_f|
          th
          = qr_f.simple_fields_for(:question_row_columns) do |qrc_f|
            th style='min-width: 350px;'
              = qrc_f.input :name, label: 'Column Header', wrapper_html: { style: 'margin-bottom: 0;' }
              = link_to 'Remove', destroy_entire_column_question_row_column_path(qrc_f.object),
                                  method: :delete, data: { confirm: t('confirm') },
                                  class: 'float-right',
                                  style: 'font-weight: normal;'

    tbody
      = f.simple_fields_for(:question_rows) do |qr_f|
        tr
          td
            = qr_f.input :name, label: 'Row Header', wrapper_html: { style: 'margin-bottom: 0;' }
            = link_to 'Remove', qr_f.object, method: :delete, data: { confirm: t('confirm') }, class: 'float-right'

          = qr_f.simple_fields_for(:question_row_columns) do |qrc_f|

            td

              fieldset.fieldset
                legend Options

                / Let's disable some question types for now...they are unstable.
                = qrc_f.association :question_row_column_type, label: 'Field Type',
                                                                      include_blank: false,
                                                                      disabled: QuestionRowColumnType.where(id: [3, 4, 8, 9]).pluck(:id),
                                                                      wrapper: 'horizontal_form'

                = qrc_f.simple_fields_for(:question_row_columns_question_row_column_options) do |qrcqrco_f|

                  - option = qrcqrco_f.object

                  div class="field-options field-option-type-#{ option.question_row_column_option.name }"

                    / Provide remove link for deletion of answer choices except when only one is present.
                    - if (option.question_row_column_option_id == 1) &&\
                      (option.question_row_column.question_row_columns_question_row_column_options\
                        .where(question_row_column_option: QuestionRowColumnOption.find_by(name: 'answer_choice')).length > 1)

                      = link_to 'Remove', option, method: :delete, data: { confirm: t('confirm') },
                                                  class: 'float-right'

                    - white_list_coding = { \
                      'white_list_tilda' => '~', \
                      'white_list_lt'    => '<', \
                      'white_list_gt'    => '>', \
                      'white_list_lte'   => '≤', \
                      'white_list_gte'   => '≥' }

                    = qrcqrco_f.input :name,
                                      label: white_list_coding.keys.include?(option.question_row_column_option.name) ? \
                                        'Whitelist character: ' + white_list_coding[option.question_row_column_option.name] : \
                                        option.question_row_column_option.name.titleize,
                                      inline_label: white_list_coding.keys.include?(option.question_row_column_option.name),
                                      as: option.name_type,
                                      input_html: { title: option.question_row_column_option.description },
                                      wrapper: 'horizontal_form'

                .links
                  = link_to_add_association qrc_f,
                                            :question_row_columns_question_row_column_options,
                                            partial: 'questions/question_types/question_row_column_fields_question_row_column_field_option_fields',
                                            class: 'button secondary tiny' do
                    i.fi-plus>
                    | Add answer choice
