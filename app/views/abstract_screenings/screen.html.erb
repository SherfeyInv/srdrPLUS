<div x-data id="abstrackr-wrapper">
  <%= render 'abstract_screenings/screen/modal_weighing' %>
  <!-- prettier-ignore -->
  <%= render 'abstract_screenings/screen/confirmation_modal' %>
  <!-- prettier-ignore -->
  <%= render 'abstract_screenings/screen/menu' %>
  <div
    class="m-auto xl:w-1/2 h-32 absolute inset-0 mt-0 overflow-y-hidden bg-gray-300 flex flex-col justify-center"
  >
    <div class="mt-3">
      <div class="horizontal-scroll-wrapper">
        <h1
          class="px-8 pb-5 text-base font-bold horizontal-scroll-wrapper-item overflow-x-auto whitespace-nowrap"
          x-text="$store.global.citation.title"
        ></h1>
      </div>
      <div class="px-8 text-sm overflow-x-auto pb-5 whitespace-nowrap">
        Journal: <span x-text="$store.global.citation.journal"></span>
      </div>
      <div class="horizontal-scroll-wrapper">
        <div
          class="horizontal-scroll-wrapper-item text-sm overflow-x-auto pb-5 whitespace-nowrap"
        >
          Authors: <span x-text="$store.global.citation.authors"></span>
        </div>
      </div>
    </div>
  </div>
  <div
    class="m-auto xl:w-1/2 h-auto block absolute inset-0 mt-32 mb-32 overflow-y-auto overflow-x-hidden bg-gray-100"
  >
    <div class="vertical-scroll-wrapper">
      <div class="vertical-scroll-wrapper-item">
        <div
          class="px-8 leading-loose weightable"
          @click="$store.global.toggle(); window.setTimeout(function () { document.getElementById('term').focus(); }, 0);"
          x-text="$store.global.citation.abstract"
        ></div>
        <div
          class="px-8 break-all leading-loose"
          x-text="$store.global.citation.keywords"
        ></div>
        <div
          class="px-8 break-all leading-loose"
          x-text="$store.global.citation.id"
        ></div>
      </div>
    </div>
  </div>

  <div
    class="xl:w-1/2 m-auto absolute bottom-0 left-0 right-0 bg-gray-100 h-32"
  >
    <div class="h-full text-white">
      <div class="grid grid-cols-3 h-full">
        <div
          class="cursor-pointer border-r-8 border-white bg-red-500 flex justify-center items-center rounded-tl-2xl"
          @click="$store.global.postLabel({ labelValue: -1 })"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-10 w-10"
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fill-rule="evenodd"
              d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
              clip-rule="evenodd"
            />
          </svg>
        </div>
        <div class="grid grid-rows-2">
          <div
            class="cursor-pointer border-b-4 border-white bg-gray-500 flex justify-center items-center"
            @click="$store.global.postLabel({ labelValue: 0 })"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-10 w-10"
              viewBox="0 0 20 20"
              fill="currentColor"
            >
              <path
                fill-rule="evenodd"
                d="M10 2a1 1 0 011 1v1.323l3.954 1.582 1.599-.8a1 1 0 01.894 1.79l-1.233.616 1.738 5.42a1 1 0 01-.285 1.05A3.989 3.989 0 0115 15a3.989 3.989 0 01-2.667-1.019 1 1 0 01-.285-1.05l1.715-5.349L11 6.477V16h2a1 1 0 110 2H7a1 1 0 110-2h2V6.477L6.237 7.582l1.715 5.349a1 1 0 01-.285 1.05A3.989 3.989 0 015 15a3.989 3.989 0 01-2.667-1.019 1 1 0 01-.285-1.05l1.738-5.42-1.233-.617a1 1 0 01.894-1.788l1.599.799L9 4.323V3a1 1 0 011-1zm-5 8.274l-.818 2.552c.25.112.526.174.818.174.292 0 .569-.062.818-.174L5 10.274zm10 0l-.818 2.552c.25.112.526.174.818.174.292 0 .569-.062.818-.174L15 10.274z"
                clip-rule="evenodd"
              />
            </svg>
          </div>
          <div
            class="cursor-pointer border-t-2 border-white bg-srdrpurple flex justify-center items-center"
            @click="$store.global.menu = !$store.global.menu"
          >
            <div class="space-y-2">
              <div class="w-8 h-0.5 bg-white"></div>
              <div class="w-8 h-0.5 bg-white"></div>
              <div class="w-8 h-0.5 bg-white"></div>
            </div>
          </div>
        </div>
        <div
          class="cursor-pointer border-l-8 border-white bg-green-500 flex justify-center items-center rounded-tr-2xl"
          @click="$store.global.postLabel({ labelValue: 1 })"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-10 w-10"
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fill-rule="evenodd"
              d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
              clip-rule="evenodd"
            />
          </svg>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  function prepareText() {
    var p = $(".weightable");

    p.html(function (index, oldHtml) {
      return oldHtml.replace(
        /\b(\w+?)\b/g,
        `<span onClick="$('#term').val('$1')" class="word hover:bg-blue-200">$1</span>`
      );
    });
  }
  document.addEventListener("alpine:init", () => {
    Alpine.store("global", {
      menu: false,
      modal: false,
      citation: {
        abstract_screening_id: "",
        abstract_screenings_citations_project_id: "",
        title: "",
        journal: "",
        authors: "",
        abstract: "",
        keywords: "",
        id: "",
      },
      confirmationModal: false,
      confirmationModalText: "",
      confirmationModalTexts: {
        "-1": "Rejected",
        0: "Maybe",
        1: "Accepted",
      },

      toggle() {
        this.modal = !this.modal;
      },

      async showConfirmation(label) {
        this.confirmationModalText = this.confirmationModalTexts[label];
        this.confirmationModal = true;
        await new Promise((resolve, reject) => setTimeout(resolve, 500));
        this.confirmationModal = false;
      },

      async postLabel(labelData) {
        const response = await fetch(
          "/abstract_screenings/<%= params[:abstract_screening_id] %>/label",
          {
            method: "POST",
            headers: {
              Accept: "application/json",
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              data: { labelData, citation: this.citation },
            }),
          }
        );
        const citation = await response.json();
        if (labelData) await this.showConfirmation(labelData.labelValue);
        this.citation = citation;
        await new Promise((resolve, reject) => setTimeout(resolve, 0));
        prepareText();
      },
    });
    Alpine.store("global").postLabel();
  });
</script>
