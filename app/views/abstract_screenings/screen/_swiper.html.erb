<div class="absolute bottom-0 w-full bg-gray-300">
  <div class="flex justify-center items-center overflow-hidden">
    <div class="demo__card-cont">
      <div class="demo__card">
        <div
          class="demo__card__top bg-slate-600 rounded-full flex justify-center items-center"
        >
          <div class="demo__card__name text-base">
            Swipe Here <br />Double Tap
          </div>
        </div>
        <div class="demo__card__choice rounded-full m--reject bg-red-500"></div>
        <div class="demo__card__choice rounded-full m--like bg-green-500"></div>
        <div class="demo__card__drag"></div>
      </div>
    </div>
  </div>
</div>
<script>
  $(document).ready(function () {
    var animating = false;
    var cardsCounter = 0;
    var numOfCards = 1;
    var decisionVal = 80;
    var pullDeltaX = 0;
    var deg = 0;
    var $card, $cardReject, $cardLike;

    function pullChange() {
      animating = true;
      deg = pullDeltaX / 10;
      $card.css(
        "transform",
        "translateX(" + pullDeltaX + "px) rotate(" + deg + "deg)"
      );

      var opacity = pullDeltaX / 100;
      var rejectOpacity = opacity >= 0 ? 0 : Math.abs(opacity);
      var likeOpacity = opacity <= 0 ? 0 : opacity;
      $cardReject.css("opacity", rejectOpacity);
      $cardLike.css("opacity", likeOpacity);
    }

    function release() {
      if (pullDeltaX >= decisionVal) {
        $card.addClass("to-right");
        $("#last-result").text("Yes");
        window.reload();
        console.log("right");
      } else if (pullDeltaX <= -decisionVal) {
        $card.addClass("to-left");
        $("#last-result").text("No");
        console.log("left");
      }

      if (Math.abs(pullDeltaX) >= decisionVal) {
        $card.addClass("inactive");

        setTimeout(function () {
          $card.addClass("below").removeClass("inactive to-left to-right");
          cardsCounter++;
          if (cardsCounter === numOfCards) {
            cardsCounter = 0;
            $(".demo__card").removeClass("below");
          }
        }, 300);
      }

      if (Math.abs(pullDeltaX) < decisionVal) {
        $card.addClass("reset");
      }

      setTimeout(function () {
        $card
          .attr("style", "")
          .removeClass("reset")
          .find(".demo__card__choice")
          .attr("style", "");

        pullDeltaX = 0;
        animating = false;
      }, 300);
    }

    $(document).on(
      "mousedown touchstart",
      ".demo__card:not(.inactive)",
      function (e) {
        if (animating) return;

        $card = $(this);
        $cardReject = $(".demo__card__choice.m--reject", $card);
        $cardLike = $(".demo__card__choice.m--like", $card);
        var startX = e.pageX || e.originalEvent.touches[0].pageX;

        $(document).on("mousemove touchmove", function (e) {
          var x = e.pageX || e.originalEvent.touches[0].pageX;
          pullDeltaX = x - startX;
          if (!pullDeltaX) return;
          pullChange();
        });

        $(document).on("mouseup touchend", function () {
          $(document).off("mousemove touchmove mouseup touchend");
          if (!pullDeltaX) return; // prevents from rapid click events
          release();
        });
      }
    );
  });

  var p = $(".weightable");

  p.html(function (index, oldHtml) {
    return oldHtml.replace(
      /\b(\w+?)\b/g,
      `<span onClick="$('#term').val('$1')" class="word hover:bg-blue-200">$1</span>`
    );
  });
</script>

<script>
  var square = document.querySelector("#abstrackr-wrapper");

  // Create a manager to manager the element
  var manager = new Hammer.Manager(square);

  // Create a recognizer
  var DoubleTap = new Hammer.Tap({
    event: "doubletap",
    taps: 2,
    time: 500,
    threshold: 100,
    posThreshold: 150,
  });

  // Add the recognizer to the manager
  manager.add(DoubleTap);

  // Subscribe to desired event
  manager.on("doubletap", function (e) {
    Alpine.store("global").toggle();
  });

  document.addEventListener("alpine:init", () => {
    Alpine.store("global", {
      modal: false,

      toggle() {
        this.modal = !this.modal;
      },
    });
  });
</script>
