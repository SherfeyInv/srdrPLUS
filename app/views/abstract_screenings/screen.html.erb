<div x-data id="abstrackr-wrapper">
  <%= render 'abstract_screenings/screen/modal_weighing' %>
  <!-- prettier-ignore -->
  <%= render 'abstract_screenings/screen/confirmation_modal' %>
  <!-- prettier-ignore -->
  <%= render 'abstract_screenings/screen/close_button' %>
  <div
    class="m-auto xl:w-1/2 h-32 absolute inset-0 mt-0 overflow-y-hidden bg-gray-300 flex flex-col justify-center"
  >
    <div class="mt-3">
      <div class="horizontal-scroll-wrapper">
        <h1
          class="px-8 pb-2 text-base font-bold horizontal-scroll-wrapper-item overflow-x-auto whitespace-nowrap"
          x-text="$store.global.citation.title"
        ></h1>
      </div>
      <div class="px-8 text-sm overflow-x-auto whitespace-nowrap">
        Journal: <span x-text="$store.global.citation.journal"></span>
      </div>
      <div class="horizontal-scroll-wrapper">
        <div
          class="horizontal-scroll-wrapper-item text-sm overflow-x-auto whitespace-nowrap"
        >
          Authors: <span x-text="$store.global.citation.authors"></span>
        </div>
      </div>
    </div>
  </div>
  <div
    class="m-auto xl:w-1/2 h-auto block absolute inset-0 mt-32 mb-40 overflow-y-auto overflow-x-hidden bg-gray-100"
  >
    <div class="vertical-scroll-wrapper">
      <div class="vertical-scroll-wrapper-item">
        <div
          class="px-8 leading-loose weightable"
          @click="$store.global.toggle(); window.setTimeout(function () { document.getElementById('term').focus(); }, 0);"
          x-text="$store.global.citation.abstract"
        ></div>
        <div
          class="px-8 break-all leading-loose"
          x-text="$store.global.citation.keywords"
        ></div>
        <div
          class="px-8 break-all leading-loose"
          x-text="$store.global.citation.id"
        ></div>
      </div>
    </div>
  </div>

  <div
    class="xl:w-1/2 m-auto absolute bottom-0 left-0 right-0 bg-gray-100 h-40"
  >
    <div class="h-full">
      <div class="grid grid-cols-3 h-full">
        <div
          class="bg-gray-500 flex justify-center items-center rounded-tl-2xl"
          @click=""
        >
          Reasons
        </div>
        <div class="bg-orange-500 flex justify-center items-center" @click="">
          Tags
        </div>
        <div
          class="bg-indigo-500 flex justify-center items-center rounded-tr-2xl"
          @click=""
        >
          Notes
        </div>
        <div
          class="bg-red-500 flex justify-center items-center"
          @click="$store.global.postLabel({ labelValue: -1 })"
        >
          Reject
        </div>
        <div class="bg-blue-500 grid grid-rows-2">
          <div
            class="bg-yellow-500 flex justify-center items-center"
            @click="$store.global.postLabel({ labelValue: 0 })"
          >
            Maybe
          </div>
          <div class="bg-purple-500 flex justify-center items-center" @click="">
            Back
          </div>
        </div>
        <div
          class="bg-green-500 flex justify-center items-center"
          @click="$store.global.postLabel({ labelValue: 1 })"
        >
          Accept
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  function prepareText() {
    var p = $(".weightable");

    p.html(function (index, oldHtml) {
      return oldHtml.replace(
        /\b(\w+?)\b/g,
        `<span onClick="$('#term').val('$1')" class="word hover:bg-blue-200">$1</span>`
      );
    });
  }
  document.addEventListener("alpine:init", () => {
    Alpine.store("global", {
      modal: false,
      citation: {
        abstract_screening_id: "",
        abstract_screenings_citations_project_id: "",
        title: "",
        journal: "",
        authors: "",
        abstract: "",
        keywords: "",
        id: "",
      },
      confirmationModal: false,
      confirmationModalText: "",
      confirmationModalTexts: {
        "-1": "Rejected",
        0: "Maybe",
        1: "Accepted",
      },

      toggle() {
        this.modal = !this.modal;
      },

      async showConfirmation(label) {
        this.confirmationModalText = this.confirmationModalTexts[label];
        this.confirmationModal = true;
        await new Promise((resolve, reject) => setTimeout(resolve, 500));
        this.confirmationModal = false;
      },

      async postLabel(labelData) {
        const response = await fetch(
          "/abstract_screenings/<%= params[:abstract_screening_id] %>/label",
          {
            method: "POST",
            headers: {
              Accept: "application/json",
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              data: { labelData, citation: this.citation },
            }),
          }
        );
        const citation = await response.json();
        if (labelData) await this.showConfirmation(labelData.labelValue);
        this.citation = citation;
        await new Promise((resolve, reject) => setTimeout(resolve, 0));
        prepareText();
      },
    });
    Alpine.store("global").postLabel();
  });
</script>
