.column.row
  - eefps_qrcf = ExtractionsExtractionFormsProjectsSectionsQuestionRowColumnField.find_or_create_by(\
    extractions_extraction_forms_projects_sections_type1: t1.blank?\
    ? nil\
    : ExtractionsExtractionFormsProjectsSectionsType1.find_or_create_by(\
      extractions_extraction_forms_projects_section: eefps,
      type1: t1\
      ),
    extractions_extraction_forms_projects_section: eefps,
    question_row_column_field: qrc.question_row_column_fields.first\
  )
  - record = Record.find_or_create_by(recordable: eefps_qrcf)
  = simple_form_for(record, html: { data: { 'abide': '', 'live-validate': true } }) do |f|
    = f.error_notification

    = f.input :name, label: false,
      class: 'form-control',
      required: true,
      input_html: {\
        data: { prereq: "prereq-#{ qrc.class }-#{ qrc.id }" },
        pattern: ".{0}|.{#{ qrc.question_row_columns_question_row_column_options.find_by(question_row_column_option_id: 2).name },#{ qrc.question_row_columns_question_row_column_options.find_by(question_row_column_option_id: 3).name }}",
        title: "Either 0 OR (#{ qrc.question_row_columns_question_row_column_options.find_by(question_row_column_option_id: 2).name } to #{ qrc.question_row_columns_question_row_column_options.find_by(question_row_column_option_id: 3).name } chars)"\
      }

    .form-actions
      = f.button :submit, 'Save'
